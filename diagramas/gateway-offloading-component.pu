@startuml gateway-offloading-component
!theme plain
title Gateway Offloading - Diagrama de Componentes

node "NGINX Gateway" {
  component "Reverse Proxy" as Proxy
  component "Load Balancer" as LB
  component "TLS Termination" as TLS
  component "Compression\n(gzip)" as Gzip
  component "Connection Pool\n(keepalive 32)" as ConnPool
  component "Retry Logic\n(proxy_next_upstream)" as Retry
  component "Health Check\n(passive)" as HealthCheck
  component "Timeout Control" as Timeout
}

package "Backend Cluster" {
  component "Backend-1\n:8443" as B1
  component "Backend-2\n:8443" as B2
}

actor Cliente
database PostgreSQL

' Flujos principales (dependencias con etiquetas)
Cliente --> TLS : HTTPS Request
TLS --> Proxy : HTTP (decrypted)
Proxy --> LB : Route request
LB --> HealthCheck : Check backend health
HealthCheck --> LB : Available backends
LB --> Retry : Select backend
Retry --> ConnPool : Reuse connection
ConnPool --> Timeout : Apply timeouts
Timeout --> B1 : Forward request (preferencia)
Timeout --> B2 : Fallback si B1 no disponible

B1 --> PostgreSQL : Query
PostgreSQL --> B1 : Data
B2 --> PostgreSQL : Query
PostgreSQL --> B2 : Data

B1 --> Gzip : Response
B2 --> Gzip : Response
Gzip --> TLS : Compress
TLS --> Cliente : HTTPS Response

note right of TLS
  **Offloaded: TLS/SSL**
  - Certificados y cifrado
  - Backend usa HTTP simple
end note

note right of Retry
  **Offloaded: Retry Logic**
  proxy_next_upstream error timeout http_500 http_502 http_503 http_504
  proxy_next_upstream_tries 3
end note

note right of HealthCheck
  **Offloaded: Health Checks**
  max_fails=3
  fail_timeout=10s
end note

note right of ConnPool
  **Offloaded: Connection Pooling**
  keepalive 32
end note

note right of Gzip
  **Offloaded: Compression**
  gzip on
  gzip_types application/json ...
end note

note right of Timeout
  **Offloaded: Timeout Management**
  proxy_connect_timeout 10s
  proxy_send_timeout 10s
  proxy_read_timeout 10s
end note

note bottom of B1
  **Backend simplificado:**
  - Solo lógica de negocio
  - Sin TLS / retries / compresión / pooling
end note
@enduml
