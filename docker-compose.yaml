services:
  # Construye la imagen del backend una sola vez con este servicio;
  # app-2 reutiliza la misma imagen para evitar construir dos veces.
  backend-app-1:
    build:
      context: ./backend
    image: tfu-backend:local
    container_name: backend-app-1
    environment:
      SERVER_PORT: 8080
      JWT_SECRET: ${JWT_SECRET:-zSUp3R-l0ng_S3cuR3_K3y_F0r_JWT_T0k3n_S1gn1ng_W1th_M0r3_Th4n_256_B1ts_0f_3ntr0py_12345678901234567890}
    depends_on:
      - postgres
      - flaky-service
    restart: unless-stopped
    networks:
      - app-net

  backend-app-2:
    image: tfu-backend:local # reutiliza la imagen construida por backend-app-1
    container_name: backend-app-2
    environment:
      SERVER_PORT: 8080
      JWT_SECRET: ${JWT_SECRET:-zSUp3R-l0ng_S3cuR3_K3y_F0r_JWT_T0k3n_S1gn1ng_W1th_M0r3_Th4n_256_B1ts_0f_3ntr0py_12345678901234567890}
      SPRING_MAIN_ALLOW-BEAN-DEFINITION-OVERRIDING: "true"
    depends_on:
      - postgres
      - flaky-service
      - backend-app-1 # para asegurar orden de arranque en demo
    restart: unless-stopped
    networks:
      - app-net

  flaky-service:
    build:
      context: ./flaky-service
    container_name: flaky-service
    ports:
      - "9090:9090" # expuesto solo para debug/demo
    restart: unless-stopped
    networks:
      - app-net

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "8080:80" # entrada p√∫blica: http://localhost:8080
    volumes:
      - ./ops/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend-app-1
      - backend-app-2
    restart: unless-stopped
    networks:
      - app-net
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: secret
    ports:
      - "5432:5432"
    volumes:
      - ./database/01-init.sql:/docker-entrypoint-initdb.d/1_init.sql
      - ./database/02-seed.sql:/docker-entrypoint-initdb.d/2_seed.sql
      - ./database/03-auth-test-data.sql:/docker-entrypoint-initdb.d/3_auth_test_data.sql
    networks:
      - app-net

networks:
  app-net:
    driver: bridge
