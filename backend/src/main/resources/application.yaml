## Puerto en el que se ejecuta el servidor Spring Boot
server:
  port: ${SERVER_PORT:8080}

## Nivel de log para la seguridad de Spring
logging.level.org.springframework.security: WARN

## Configuración de la base de datos
spring:
  datasource:
    url: jdbc:postgresql://postgres:5432/mydatabase
    username: myuser
    password: secret
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

## Configuración de endpoints de monitoreo y métricas
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics

## Configuración del JWT para autenticación
jwt:
  secret: ${JWT_SECRET:dev-secret-please-change} # Secreto para firmar los tokens JWT
  expiration: 3600 # Tiempo de expiración del token en segundos

## Configuración de Resilience4j para tolerancia a fallos
resilience4j:
  circuitbreaker:
    instances:
      streamSource:
        slidingWindowSize: 10 # Tamaño de la ventana para el cálculo de fallos
        failureRateThreshold: 50 # Porcentaje de fallos para abrir el circuito
        waitDurationInOpenState: 10s # Tiempo de espera antes de reintentar
  retry:
    instances:
      streamSource:
        maxAttempts: 3 # Número máximo de reintentos
        waitDuration: 200ms # Espera entre reintentos
        enableExponentialBackoff: true # Habilita backoff exponencial
  timelimiter:
    instances:
      streamSource:
        timeoutDuration: 2s # Tiempo máximo de espera para la operación
  ratelimiter:
    instances:
      loginLimiter:
        limitForPeriod: 5 # Límite de intentos por periodo
        limitRefreshPeriod: 1m # Duración del periodo
        timeoutDuration: 0 # Tiempo de espera para obtener permiso
